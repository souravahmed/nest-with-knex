version: '3.8'
services:
  dev:
    container_name: ${APP_CONTAINER_NAME}
    image: ${APP_CONTAINER_NAME}:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
    command: npm run start:dev
    ports:
      - ${APP_PORT}:3000
      - ${APP_DEBUG_PORT}:9229
    networks:
      - nestjs-network
    depends_on:
      - mongodb
      - mysql
      - cache
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

  mongodb:
    image: mongo
    container_name: mongodb
    volumes:
      - ./mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - ${MONGODB_PORT:-27017}:27017
    networks:
      - nestjs-network
    restart: always

  mysql:
    image: mariadb
    restart: always
    networks:
      - nestjs-network
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_USER=${MYSQL_ROOT_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - '${MYSQL_PORT:-3306}:3306'
    volumes:
      - ./mysql_data/db:/var/lib/mysql
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - mysql
    environment:
      MYSQL_USERNAME: ${MYSQL_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_HOST: mysql
    depends_on:
      - mysql
    restart: always
    networks:
      - nestjs-network
    ports:
      - ${PHPMYADMIN_PORT:-8085}:80
  cache:
    image: redis:6.2-alpine
    restart: always
    networks:
      - nestjs-network
    ports:
      - '${REDIS_PORT:-6379}:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./cache:/data

networks:
  nestjs-network:
    driver: bridge
# volumes:
#   mongo_data:
#     driver: local
#   mysql_data:
#     driver: local
#   cache:
#     driver: local
